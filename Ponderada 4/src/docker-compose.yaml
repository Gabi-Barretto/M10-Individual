version: '3.10'

services:
  user-service:
    build: ./service-user
    container_name: user-service
    environment:
      - DATABASE_URL=postgresql://user:password@db/mydatabase
    ports:
      - "8001:8000"
    networks:
      - app-network
    depends_on:
      - db
      - rabbitmq

  todo-service:
    build: ./service-todo
    container_name: todo-service
    environment:
      - DATABASE_URL=postgresql://user:password@db/mydatabase
    ports:
      - "8002:8000"
    networks:
      - app-network
    depends_on:
      - db
      - rabbitmq

  image-service:
    build: ./service-image-processing
    container_name: image-service
    environment:
      - DATABASE_URL=postgresql://user:password@db/mydatabase
    ports:
      - "8003:8000"
    networks:
      - app-network
    depends_on:
      - db
      - rabbitmq

  log-service:
    build: ./service-log
    container_name: log-service
    environment:
      - DATABASE_URL=postgresql://user:password@db/mydatabase
    ports:
      - "8004:8000"
    volumes:
      - ./logs:/var/log
    networks:
      - app-network
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.13.4
    container_name: filebeat
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./logs:/var/log
    depends_on:
      - db
      - rabbitmq
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - app-network

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: inteli
      RABBITMQ_DEFAULT_PASS: inteli_secret
    networks:
      - app-network

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - todo-service
      - image-service
      - log-service
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
